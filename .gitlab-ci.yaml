image: docker
services:
  - docker:dind

variables:
  CONTAINER_NAME:  hasura/graphql-engine:v1.3.3  
  PGRAPHILE_NAME:  graphile/postgraphile
  APOLLO_IMAGE: vedangparasnis/apollographql:latest 

stages:
  - login
  - ssh_connect
  - check
  - startCluster
  # - health-prometheous

login:
  before_script:
    - echo "[x] enabling docker login"
  stage: login
  script:
    - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
    - echo "[x] login success"

ssh_connect:
  stage: ssh_connect
  image: ubuntu:latest
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY") # copy the ssh private key
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - scp dt230629@$CLOUD_INSTANCE_DNS:/root/.kube .

check:
  before_script:
    - echo "[x] checking for requirements"
  image: dtzar/helm-kubectl
  stage: check
  script:
    - bash remote-connect.sh ${CLOUD_INSTANCE_IP} ${KUBERNETES_CLUSTER_NAME}
    - echo "[x] kubectl connected to remote cluster on cloud 10.222.52.144" 

startCluster:
  dependencies:
    - login
    - check
  image: dtzar/helm-kubectl
  stage: startCluster
  script:
    - echo "[x] installing th config in cluster"
    - bash install-services.sh
  
  after_script:
    - echo "[x] all config done"

# health-prometheous:
#   stage: health-prometheous 
#   dependencies:
#     - startCluster
#   before_script:
#     echo "[x] running health checks and display prometheus UI"
#   script:
#     bash health.sh ${KUBERNETES_CLUSTER_NAME}

